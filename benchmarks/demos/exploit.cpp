#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unordered_map>
#include <set>

class Base {
public:
    virtual int foo() { return 0; }
};

class Derived : public Base {
public:
    virtual int foo() override { return 1; }
};

void goodFunc1() { printf("%d\n", 1); return; }
void goodFunc2() { printf("%d\n", 2); return; }
void goodFunc3() { printf("%d\n", 3); return; }
void badFunc() { return; }

int wrapper(int argc, char** argv) {
    char buf[8];
    void (*fptr)() = nullptr;

    srand(time(NULL));
    int random = rand() % 3 + 1;

    switch (random) {
    case 1: fptr = &goodFunc1; ; break;
    case 2: fptr = &goodFunc2; break;
    case 3: fptr = &goodFunc3; break;
    }

    strcpy(buf, argv[1]);

    (*fptr)();
    auto fptr2 = *fptr;
    fptr2();

    Derived* base = new Derived();
    base->foo(); // should call derived foo() indirectly
    delete base;

    return 0;
}

int main(int argc, char** argv) {
    wrapper(argc, argv);
    return 0;
}
